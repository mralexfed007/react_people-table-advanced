{"version":3,"sources":["components/Header/Header.jsx","HelpTools/PreparePeople.jsx","components/PersonName/PersonName.jsx","HelpTools/types.jsx","components/PersonRow/PersonRow.jsx","components/PeopleTable/PeopleTable.jsx","HelpTools/PeopleSort.jsx","components/NewPerson/NewPerson.jsx","pages/PeoplePage/PeoplePage.jsx","pages/HomePage/HomePage.jsx","App.jsx","index.jsx"],"names":["Header","className","to","activeClassName","exact","getPeople","a","fetch","then","res","json","peopleArr","map","human","mother","find","name","motherName","father","fatherName","PersonName","PropTypes","string","isRequired","number","UserType","slug","sex","url","useRouteMatch","style","color","PersonRow","person","personId","params","ClassNames","key","alternativeKey","PeopleTable","people","onSort","location","useLocation","searchParams","URLSearchParams","search","sortBy","get","sortOrder","useState","orderChange","setOrderChange","updateOrder","useCallback","currentSortBy","column","col","type","onClick","prev","disabled","includes","sort","b","localeCompare","born","died","sortPeople","NewPerson","setPeople","formData","setFormData","mothersArr","fathersArr","parentsArr","setParentsArr","history","useHistory","createParentArr","filter","filterParentArr","babyBorn","lifeDuration","actualBirthday","buttonDisable","validationError","setValidationError","validation","data","dif","addSlug","age","split","join","addNewPerson","e","preventDefault","push","useEffect","handleChange","target","value","test","onSubmit","onChange","placeholder","required","checked","PeoplePage","addedPeople","setAddedPeople","path","appliedQuery","setSort","query","setQuery","setSearchParam","searchParam","set","delete","applyQuery","debounce","newQuery","toString","filteredPeople","useMemo","toLowerCase","filterPeople","pathname","HomePage","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ac61eef3.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Header = () => (\n  <nav className=\"navbar\">\n    <div className=\"navbar-brand\">\n      <NavLink\n        className=\"navbar-item is-tab\"\n        to=\"/\"\n        activeClassName=\"is-active\"\n        exact\n      >\n        Home\n      </NavLink>\n      <NavLink\n        className=\"navbar-item is-tab\"\n        to=\"/people\"\n        activeClassName=\"is-active\"\n      >\n        People\n      </NavLink>\n    </div>\n  </nav>\n);\n","// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = async() => {\n  const peopleArr = await fetch(API_URL).then(res => res.json());\n\n  return peopleArr\n    .map(human => (\n      {\n        ...human,\n        mother: peopleArr\n          .find(mother => mother.name === human.motherName) || null,\n        father: peopleArr\n          .find(father => father.name === human.fatherName) || null,\n      }\n    ));\n};\n\nexport const filterPeople = (people, query) => people\n  .filter(({ name, motherName, fatherName }) => (\n    `${name}${motherName}${fatherName}`.toLowerCase()\n      .includes(query.toLowerCase())\n  ));\n","import React from 'react';\nimport { NavLink, useRouteMatch } from 'react-router-dom';\nimport { PersonNameType } from '../../HelpTools/types';\n\nexport const PersonName = ({ name, slug, sex }) => {\n  const { url } = useRouteMatch();\n\n  return (\n    <NavLink\n      to={`${url}/${slug}`}\n      style={sex === 'm' ? { color: 'blue' } : { color: 'red' }}\n      activeClassName=\"is-selected\"\n    >\n      {name}\n    </NavLink>\n  );\n};\n\nPersonName.propTypes = PersonNameType;\n","import PropTypes from 'prop-types';\n\nexport const UserType = {\n  name: PropTypes.string.isRequired,\n  sex: PropTypes.string.isRequired,\n  born: PropTypes.number.isRequired,\n  died: PropTypes.number.isRequired,\n  motherName: PropTypes.string,\n  fatherName: PropTypes.string,\n  slug: PropTypes.string.isRequired,\n  mother: PropTypes.UserType,\n  father: PropTypes.UserType,\n};\n\nexport const PersonNameType = {\n  name: PropTypes.string.isRequired,\n  sex: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n};\n","/* eslint-disable no-unreachable */\nimport React from 'react';\nimport ClassNames from 'classnames';\nimport { useRouteMatch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { UserType } from '../../HelpTools/types';\nimport { PersonName } from '../PersonName';\n\nexport const PersonRow = ({ person }) => {\n  const keys = [\n    'name', 'sex', 'born', 'died', 'mother', 'father',\n  ];\n  const { params } = useRouteMatch('/people/:personId?');\n  const { personId } = params;\n\n  return (\n    <tr\n      className={ClassNames('Person', {\n        'is-selected': personId === person.slug,\n      })}\n    >\n      {keys.map((key) => {\n        const alternativeKey = `${key}Name`;\n\n        switch (key) {\n          case 'name':\n            return (\n              <td\n                key={key}\n              >\n                <PersonName {...person} />\n              </td>\n            );\n            break;\n\n          case 'mother':\n          case 'father':\n            return (\n              <td\n                key={key}\n              >\n                {person[key]\n                  ? (<PersonName {...person[key]} />)\n                  : person[alternativeKey]}\n              </td>\n            );\n            break;\n\n          default:\n            return (\n              <td\n                key={key}\n              >\n                {person[key]}\n              </td>\n            );\n            break;\n        }\n      })}\n    </tr>\n  );\n};\n\nPersonRow.propTypes = {\n  person: PropTypes.shape(UserType).isRequired,\n};\n","/* eslint-disable no-else-return */\nimport React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames';\nimport { useLocation } from 'react-router-dom';\nimport { UserType } from '../../HelpTools/types';\nimport { sortPeople } from '../../HelpTools/PeopleSort';\nimport { PersonRow } from '../PersonRow';\nimport './PeopleTable.css';\n\nexport const PeopleTable = ({ people, onSort }) => {\n  const tableHead = ['Name', 'Sex', 'Born', 'Died', 'Mother', 'Father'];\n  const noSorted = 'MotherFather';\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const sortBy = searchParams.get('sortBy') || '';\n  const sortOrder = searchParams.get('sortOrder') || '';\n\n  const [orderChange, setOrderChange] = useState(false);\n  const updateOrder = useCallback((currentSortBy, column) => {\n    if (orderChange === false) {\n      setOrderChange(!orderChange);\n\n      return 'asc';\n    } else if (currentSortBy !== column) {\n      return 'asc';\n    } else {\n      setOrderChange(!orderChange);\n\n      return 'desc';\n    }\n  }, [orderChange]);\n\n  return (\n    <table className=\"table is-striped is-fullwidth\">\n      <thead>\n        <tr>\n          {tableHead.map(col => (\n            <th\n              key={col}\n            >\n              <button\n                type=\"button\"\n                onClick={() => onSort(prev => (\n                  {\n                    sortBy: col,\n                    sortOrder: updateOrder(prev.sortBy, col),\n                  }))\n              }\n                className=\"button is-normal\"\n                disabled={noSorted.includes(col)}\n              >\n                <span>{col}</span>\n                {!noSorted.includes(col) && (\n                  <span className=\"icon\">\n                    <i\n                      className={ClassNames('fas', {\n                        'fa-sort-up': sortOrder === 'asc' && sortBy === col,\n                        'fa-sort-down': sortOrder === 'desc' && sortBy === col,\n                        'fa-sort': sortBy !== col,\n                      })}\n                    />\n                  </span>\n                )}\n              </button>\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {sortPeople(people, sortBy, sortOrder).map(person => (\n          <PersonRow key={person.slug} person={person} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.shape(UserType)).isRequired,\n  onSort: PropTypes.func.isRequired,\n};\n","/* eslint-disable no-unreachable */\nexport const sortPeople = (people, sortBy, sortOrder) => {\n  switch (sortBy) {\n    case 'Name':\n      return (sortOrder === 'desc')\n        ? people.sort((a, b) => b.name.localeCompare(a.name))\n        : people.sort((a, b) => a.name.localeCompare(b.name));\n      break;\n    case 'Sex':\n      return (sortOrder === 'desc')\n        ? people.sort((a, b) => b.sex.localeCompare(a.sex))\n        : people.sort((a, b) => a.sex.localeCompare(b.sex));\n      break;\n    case 'Born':\n      return (sortOrder === 'desc')\n        ? people.sort((a, b) => b.born - a.born)\n        : people.sort((a, b) => a.born - b.born);\n      break;\n    case 'Died':\n      return (sortOrder === 'desc')\n        ? people.sort((a, b) => b.died - a.died)\n        : people.sort((a, b) => a.died - b.died);\n    default:\n      return people;\n      break;\n  }\n};\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport ClassNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { UserType } from '../../HelpTools/types';\n\nexport const NewPerson = ({ people, setPeople }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    sex: '',\n    born: '',\n    died: '',\n    mother: {},\n    father: {},\n    motherName: '',\n    fatherName: '',\n  });\n\n  const [parentsArr, setParentsArr] = useState({\n    mothersArr: [],\n    fathersArr: [],\n  });\n\n  const history = useHistory();\n\n  const createParentArr = useCallback(sex => people\n    .filter(person => person.sex === sex), [people]);\n\n  const filterParentArr = useCallback((babyBorn) => {\n    setParentsArr({\n      mothersArr: createParentArr('f')\n        .filter(mother => babyBorn > mother.born && babyBorn <= mother.died)\n        .map(mother => mother.name),\n      fathersArr: createParentArr('m')\n        .filter(father => babyBorn > father.born && babyBorn <= father.died)\n        .map(father => father.name),\n    });\n  }, [createParentArr]);\n\n  const [validationError, setValidationError] = useState({\n    lifeDuration: true,\n    actualBirthday: true,\n    buttonDisable: false,\n  });\n\n  const validation = useCallback((data) => {\n    const { born, died } = data;\n    const dif = died - born;\n    const lifeDuration = (dif >= 0 && dif < 150);\n    const actualBirthday = ((born >= 1400 && born <= 2021) || born === '');\n\n    setValidationError({\n      lifeDuration,\n      actualBirthday,\n      buttonDisable: lifeDuration && actualBirthday && born !== '',\n    });\n  }, []);\n\n  const addSlug = useCallback((name, age) => [name.split(' '), age]\n    .join('-'), []);\n\n  const addNewPerson = useCallback((e) => {\n    e.preventDefault();\n    const { name, born } = formData;\n\n    setPeople(prev => [...prev, {\n      ...formData,\n      slug: addSlug(name, born),\n    }]);\n    history.push(`/people`);\n  }, [formData]);\n\n  useEffect(() => {\n    filterParentArr(formData.born);\n    validation(formData);\n  }, [formData]);\n\n  const handleChange = useCallback(({ target }) => {\n    const { value, name } = target;\n\n    switch (name) {\n      case 'mother':\n      case 'father':\n        setFormData(prev => ({\n          ...prev,\n          [name]: people.find(person => person.name === value) || null,\n          [`${name}Name`]: people.find(person => person.name === value)?.name\n            || '',\n        }));\n        break;\n      case 'name':\n        setFormData(prev => ({\n          ...prev,\n          [name]: /^[a-z \\s]+$/i.test(value) || value === ''\n            ? value\n            : prev[name],\n        }));\n        break;\n      case 'born':\n      case 'died':\n        setFormData(prev => ({\n          ...prev,\n          [name]: /^[0-9]+$/.test(value) || value === ''\n            ? value\n            : prev[name],\n        }));\n        break;\n      default:\n        setFormData(prev => ({\n          ...prev,\n          [name]: value,\n        }));\n        break;\n    }\n  }, [people]);\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-content\">\n        <form\n          type=\"submit\"\n          onSubmit={addNewPerson}\n        >\n          <div className=\"field has-addons has-addons-centered\">\n            <div className=\"control has-icons-left\">\n              <div className=\"select\">\n                <select\n                  value={formData.motherName}\n                  name=\"mother\"\n                  onChange={handleChange}\n                  disabled={!formData.born}\n                >\n                  <option value=\"\">Mother</option>\n                  {parentsArr.mothersArr.map(motherName => (\n                    <option\n                      key={motherName}\n                      value={motherName}\n                    >\n                      {motherName}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"icon is-small is-left\">\n                <i className=\"fas fa-venus\" />\n              </div>\n            </div>\n            <div className=\"control has-icons-left is-expanded\">\n              <input\n                className=\"input\"\n                type=\"text\"\n                placeholder=\"User name\"\n                name=\"name\"\n                value={formData.name}\n                onChange={handleChange}\n                required\n              />\n              <span className=\"icon is-small is-left\">\n                <i className=\"fas fa-user\" />\n              </span>\n            </div>\n            <div className=\"control has-icons-left\">\n              <div className=\"select\">\n                <select\n                  value={formData.fatherName}\n                  name=\"father\"\n                  onChange={handleChange}\n                  disabled={!formData.born}\n                >\n                  <option value=\"\">Father</option>\n                  {parentsArr.fathersArr.map(fatherName => (\n                    <option\n                      key={fatherName}\n                      value={fatherName}\n                    >\n                      {fatherName}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"icon is-small is-left\">\n                <i className=\"fas fa-mars\" />\n              </div>\n            </div>\n          </div>\n          <div className=\"field has-addons has-addons-centered\">\n            <div className=\"control\">\n              <label className=\"radio\">\n                <input\n                  type=\"radio\"\n                  name=\"sex\"\n                  value=\"m\"\n                  checked={formData.sex === 'm'}\n                  onChange={handleChange}\n                  required\n                />\n                Male\n              </label>\n              <label className=\"radio\">\n                <input\n                  type=\"radio\"\n                  name=\"sex\"\n                  value=\"f\"\n                  checked={formData.sex === 'f'}\n                  onChange={handleChange}\n                  required\n                />\n                Female\n              </label>\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <div className=\"control is-expanded has-icons-left\">\n                  <input\n                    className={ClassNames('input', {\n                      'is-danger': !validationError.actualBirthday,\n                    })}\n                    type=\"text\"\n                    placeholder=\"Born\"\n                    name=\"born\"\n                    value={formData.born}\n                    onChange={handleChange}\n                    required\n                  />\n                  <span className=\"icon is-small is-left\">\n                    <i className=\"fas fa-baby\" />\n                  </span>\n                  {!validationError.actualBirthday && (\n                    <p className=\"help is-danger\">\n                      Enter the actual birthday, please\n                    </p>\n                  )}\n                </div>\n              </div>\n              <div className=\"field\">\n                <div className=\"control is-expanded has-icons-left\">\n                  <input\n                    className={ClassNames('input', {\n                      'is-danger': !validationError.lifeDuration,\n                    })}\n                    type=\"text\"\n                    placeholder=\"Died\"\n                    name=\"died\"\n                    value={formData.died}\n                    onChange={handleChange}\n                    disabled={!formData.born}\n                    required\n                  />\n                  <span className=\"icon is-small is-left\">\n                    <i className=\"fas fa-skull-crossbones\" />\n                  </span>\n                  {!validationError.lifeDuration && (\n                    <p className=\"help is-danger\">\n                      {`Life duration should be >= 0 and < 150`}\n                    </p>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <button\n              className=\"button is-primary\"\n              type=\"submit\"\n              disabled={!validationError.buttonDisable}\n            >\n              Add\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nNewPerson.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.shape(UserType)).isRequired,\n  setPeople: PropTypes.func.isRequired,\n};\n","import React, { useCallback, useMemo, useState, useEffect } from 'react';\nimport {\n  useLocation, useHistory, useRouteMatch,\n  Switch, Route, Link,\n} from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport { getPeople, filterPeople } from '../../HelpTools/PreparePeople';\nimport { PeopleTable } from '../../components/PeopleTable';\nimport { NewPerson } from '../../components/NewPerson';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState([]);\n  const [addedPeople, setAddedPeople] = useState([]);\n\n  useEffect(() => {\n    getPeople().then(setPeople);\n  }, []);\n\n  const { path, url } = useRouteMatch();\n  const location = useLocation();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(location.search);\n  const appliedQuery = searchParams.get('query') || '';\n  const [sort, setSort] = useState({\n    sortBy: '',\n    sortOrder: '',\n  });\n  const [query, setQuery] = useState(appliedQuery);\n\n  const setSearchParam = useCallback((searchParam, value) => {\n    if (value) {\n      searchParams.set(searchParam, value);\n    } else {\n      searchParams.delete(searchParam);\n    }\n  }, [searchParams]);\n\n  const applyQuery = useCallback(\n    debounce((newQuery) => {\n      setSearchParam('query', newQuery);\n\n      history.push(`?${searchParams.toString()}`);\n    }, 500),\n    [setSearchParam],\n  );\n\n  useEffect(() => {\n    setSearchParam('sortBy', sort.sortBy);\n    setSearchParam('sortOrder', sort.sortOrder);\n    history.push(`?${searchParams.toString()}`);\n  }, [sort]);\n\n  const filteredPeople = useMemo(() => (\n    filterPeople([...people, ...addedPeople], appliedQuery)\n  ), [people, appliedQuery, addedPeople]);\n\n  const handleQueryChange = ({ target }) => {\n    setQuery(target.value);\n    applyQuery(target.value);\n  };\n\n  return (\n    <>\n      <h2 className=\"subtitle\">People page</h2>\n      <div className=\"block\">\n        <div className=\"control has-icons-right\">\n          <input\n            className=\"input\"\n            type=\"text\"\n            value={query}\n            onChange={handleQueryChange}\n            placeholder=\"Enter name for filter\"\n          />\n          <span className=\"icon is-small is-right\">\n            <i className=\"fas fa-search\" />\n          </span>\n        </div>\n      </div>\n      <Switch>\n        <Route\n          path={`${path}/new`}\n        >\n          <NewPerson people={people} setPeople={setAddedPeople} />\n        </Route>\n        <Route>\n          <Link\n            className=\"button is-primary\"\n            to={{\n              pathname: `${path}/new`,\n              search: location.search,\n            }}\n          >\n            Add Person\n          </Link>\n        </Route>\n      </Switch>\n      <PeopleTable\n        people={filteredPeople}\n        onSort={setSort}\n      />\n    </>\n  );\n};\n","import React from 'react';\n\nexport const HomePage = () => (\n  <h2 className=\"subtitle\">Home page</h2>\n);\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { Header } from './components/Header';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { HomePage } from './pages/HomePage';\nimport 'bulma';\nimport './App.scss';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n\nconst App = () => (\n  <div className=\"App\">\n    <Header />\n    <section className=\"section\">\n      <div className=\"container\">\n        <div className=\"columns\">\n          <div className=\"column\">\n            <Switch>\n              <Route path=\"/\" exact>\n                <HomePage />\n              </Route>\n              <Route path=\"/people\">\n                <PeoplePage />\n              </Route>\n              <Redirect path=\"/home\" to=\"/\" />\n              <p>Not found Page</p>\n            </Switch>\n          </div>\n        </div>\n      </div>\n    </section>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>\n  ,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}